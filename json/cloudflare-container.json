{
  "slug": "cloudflare-container",
  "title": "🚀 Cloudflare Containers: The Next Evolution of Serverless, Now with Docker at the Edge",
  "date": "2025-06-26T08:00:10Z",
  "content": "<h1>🚀 Cloudflare Containers: The Next Evolution of Serverless, Now with Docker at the Edge</h1>\n\n<hr />\n\n<img src=\"https://raw.githubusercontent.com/shivamsancc/blog-repo/refs/heads/main/images/cloudflare.png\" alt=\"\" srcset=\"\">\n\n<p>When Cloudflare introduced <strong>Workers</strong>, it redefined serverless by letting developers run lightweight JavaScript and WebAssembly code at the edge &mdash; globally, instantly, and securely. But Workers had one big limitation: they couldn&rsquo;t run your existing binaries, Docker containers, or full runtimes.</p>\n\n<p>That&rsquo;s changing now.</p>\n\n<blockquote><strong>🔥 Cloudflare Containers</strong> &ndash; Run full Linux containers at the edge, controlled by Workers, and scaled serverlessly.</blockquote>\n\n<p>This article dives into what Cloudflare Containers are, how they work, and why they may change the way you build and deploy applications at the edge.</p>\n\n<hr />\n<h2>🧱 What Are Cloudflare Containers?</h2>\n\n<p>Cloudflare Containers let you run <strong>Docker/OCI-compatible Linux containers</strong> across Cloudflare&rsquo;s global network of 330+ data centers. You can now bring:</p>\n\n<ul>\n\t<li>Full language runtimes (Python, Go, Java, etc.)</li>\n\t<li>CLI tools</li>\n\t<li>Custom binaries</li>\n\t<li>Heavier workloads like AI inferences or video processing</li>\n</ul>\n\n<p>You define your container in a Dockerfile, and Cloudflare handles the rest &mdash; from global distribution to scaling and orchestration.</p>\n\n<h2>🧠 How It Works</h2>\n\n<p>The magic lies in the integration between <strong>Cloudflare Workers</strong> and <strong>Containers</strong>:</p>\n\n<ol>\n\t<li><strong>You define a container image</strong> using a Dockerfile or an existing OCI image.</li>\n\t<li><strong>You write a Worker script</strong>, which acts as the control plane &mdash; deciding when to spin up containers, route requests, or shut them down.</li>\n\t<li><strong>Cloudflare handles orchestration</strong>, running your containers close to your users with cold starts in seconds and per-request billing.</li>\n</ol>\n\n<blockquote><strong>Think of it as:</strong><br />\nWorker = lightweight router<br />\nContainer = full-powered runtime</blockquote>\n\n<h2>✨ Key Features</h2>\n\n<ul>\n\t<li><strong>Edge Deployment &mdash; Everywhere:</strong> Deploy once to &ldquo;Earth&rdquo; and Cloudflare handles location-based execution.</li>\n\t<li><strong>Serverless-Like Scaling:</strong> Spin up on demand, scale to zero when idle.</li>\n\t<li><strong>Built for Heavy Lifting:</strong> Run Java apps, AI workloads, CLI tools, etc.</li>\n\t<li><strong>Native Docker Integration:</strong> Define, build, and deploy using Wrangler CLI.</li>\n</ul>\n\n<pre>\n<code>wrangler deploy</code></pre>\n\n<h2>💸 Pricing Overview</h2>\n\n<p>Cloudflare Containers are billed by runtime in <strong>10ms increments</strong>, based on:</p>\n\n<ul>\n\t<li><strong>CPU:</strong> $0.000020 per vCPU-s</li>\n\t<li><strong>Memory:</strong> $0.0000025 per GB-s</li>\n\t<li><strong>Disk:</strong> $0.00000007 per GB-s</li>\n</ul>\n\n<p>You only pay when your container is actually running.</p>\n\n<h2>🛠️ Developer Experience</h2>\n\n<h3>✅ Local Dev with Docker + Wrangler</h3>\n\n<pre>\n<code>npm create cloudflare@latest -- --template containers-template\ncd my-app\nwrangler dev</code></pre>\n\n<h3>✅ Define a Container Class</h3>\n\n<pre>\n<code>import { Container } from &#39;@cloudflare/containers&#39;;\n\nexport class MyContainer extends Container {\n  defaultPort = 8080;\n  sleepAfter = &#39;5m&#39;;\n}</code></pre>\n\n<h3>✅ Fetch from Worker</h3>\n\n<pre>\n<code>export default {\n  async fetch(request, env, ctx) {\n    const inst = env.MY_CONTAINER.get(&#39;session-id&#39;);\n    return await inst.fetch(request);\n  }\n}</code></pre>\n\n<h2>🔒 Built-In Security</h2>\n\n<p>Cloudflare Containers are designed with isolation in mind:</p>\n\n<ul>\n\t<li>Run in microVMs</li>\n\t<li>Sandboxed environments</li>\n\t<li>Fully isolated per request/session</li>\n\t<li>Minimal attack surface</li>\n</ul>\n\n<h2>🗺️ Real-World Use Cases</h2>\n\n<table border=\"1\" cellpadding=\"8\" cellspacing=\"0\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Use Case</th>\n\t\t\t<th>Benefit</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>API sandbox</td>\n\t\t\t<td>Spin up secure, isolated containers for each user</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Media processing</td>\n\t\t\t<td>Handle video/image workloads near the user</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Legacy migration</td>\n\t\t\t<td>Run monoliths in containerized edge environments</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>AI inference</td>\n\t\t\t<td>Run models (GPU support coming soon)</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h2>📦 Instance Types (Beta)</h2>\n\n<table border=\"1\" cellpadding=\"8\" cellspacing=\"0\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Type</th>\n\t\t\t<th>RAM</th>\n\t\t\t<th>vCPU</th>\n\t\t\t<th>Disk</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>dev</td>\n\t\t\t<td>256 MiB</td>\n\t\t\t<td>1/16</td>\n\t\t\t<td>2 GB</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>basic</td>\n\t\t\t<td>1 GiB</td>\n\t\t\t<td>1/4</td>\n\t\t\t<td>4 GB</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>standard</td>\n\t\t\t<td>4 GiB</td>\n\t\t\t<td>1/2</td>\n\t\t\t<td>4 GB</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Beta accounts have limits of:</p>\n\n<ul>\n\t<li>20 concurrent vCPUs</li>\n\t<li>40 GB memory</li>\n\t<li>100 GB total disk</li>\n</ul>\n\n<h2>🔮 What&rsquo;s Coming Next?</h2>\n\n<ul>\n\t<li>Autoscaling support</li>\n\t<li>Built-in load balancing</li>\n\t<li>Higher instance limits</li>\n\t<li>Performance metrics and logs</li>\n</ul>\n\n<h2>🧪 Should You Use It?</h2>\n\n<p>If you&rsquo;ve hit the limits of serverless platforms like Workers, AWS Lambda, or Vercel &mdash; especially when you want to run a real binary or runtime &mdash; <strong>Cloudflare Containers</strong> are a game-changer.</p>\n\n<ul>\n\t<li>Need full Linux environments? ✔️</li>\n\t<li>Can&rsquo;t rewrite into Workers? ✔️</li>\n\t<li>Want global performance? ✔️</li>\n</ul>\n\n<h2>📝 Final Thoughts</h2>\n\n<p>Cloudflare Containers open a new era in edge computing &mdash; merging the raw power of containers with the elegance and scalability of serverless. If you already use Docker and Cloudflare, the integration is seamless. If you&#39;re building next-gen apps, this gives you full control with zero ops.</p>\n\n<blockquote><strong>With Workers + Containers, your edge can now <em>run anything</em> &mdash; globally, securely, and affordably.</strong></blockquote>\n\n<h2>📚 Resources</h2>\n\n<ul>\n\t<li><a href=\"https://developers.cloudflare.com/containers/\">Official Docs</a></li>\n\t<li><a href=\"https://blog.cloudflare.com/cloudflare-containers-coming-2025/\">Launch Blog</a></li>\n\t<li><a href=\"https://developers.cloudflare.com/workers/wrangler/\">Wrangler CLI</a></li>\n</ul>\n\n<hr />\n<p><em>Want help getting started? Drop your use case in the comments below or connect with me.</em></p>"
}
